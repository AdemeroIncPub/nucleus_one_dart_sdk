import '../../nucleus_one_dart_sdk.dart';
import '../api_model/organization_membership_package.dart' as api_mod;
import '../common/get_it.dart';
import '../common/model.dart';
import '../nucleus_one.dart';

// Originally generated by nucleus_one_utilities.
class OrganizationMembershipPackage extends Entity with NucleusOneAppDependent {
  OrganizationMembershipPackage._({
    NucleusOneApp? app,
    required this.organization,
    required this.organizationMember,
    required this.userID,
    required this.isAdmin,
    required this.isExpiringSoon,
    required this.expiration,
    required this.freeUsers,
    required this.isExpired,
  }) {
    this.app = getEffectiveNucleusOneApp(app);
  }

  factory OrganizationMembershipPackage.fromApiModel(
    api_mod.OrganizationMembershipPackage apiModel, {
    NucleusOneApp? app,
  }) {
    return OrganizationMembershipPackage._(
      app: app,
      organization: Organization.fromApiModel(apiModel.organization!),
      organizationMember: OrganizationMember.fromApiModel(apiModel.organizationMember!),
      userID: apiModel.userID!,
      isAdmin: apiModel.isAdmin!,
      isExpiringSoon: apiModel.isExpiringSoon!,
      expiration: apiModel.expiration!,
      freeUsers: apiModel.freeUsers!,
      isExpired: apiModel.isExpired!,
    );
  }

  Organization organization;

  OrganizationMember organizationMember;

  String userID;

  bool isAdmin;

  bool isExpiringSoon;

  String expiration;

  int freeUsers;

  bool isExpired;

  @override
  api_mod.OrganizationMembershipPackage toApiModel() {
    return api_mod.OrganizationMembershipPackage()
      ..organization = organization.toApiModel()
      ..organizationMember = organizationMember.toApiModel()
      ..userID = userID
      ..isAdmin = isAdmin
      ..isExpiringSoon = isExpiringSoon
      ..expiration = expiration
      ..freeUsers = freeUsers
      ..isExpired = isExpired;
  }
}

class OrganizationMembershipPackageCollection extends EntityCollection<
    OrganizationMembershipPackage, api_mod.OrganizationMembershipPackageCollection> {
  OrganizationMembershipPackageCollection({
    NucleusOneApp? app,
    List<OrganizationMembershipPackage>? items,
  }) : super(app: app, items: items);

  factory OrganizationMembershipPackageCollection.fromApiModel(
    api_mod.OrganizationMembershipPackageCollection apiModel, {
    NucleusOneApp? app,
  }) {
    return OrganizationMembershipPackageCollection(
        items: apiModel.membershipPackages
            ?.map((x) => OrganizationMembershipPackage.fromApiModel(x))
            .toList());
  }

  @override
  api_mod.OrganizationMembershipPackageCollection toApiModel() {
    return api_mod.OrganizationMembershipPackageCollection()
      ..membershipPackages = items.map((x) => x.toApiModel()).toList();
  }
}
