import '../api_model/document_subscription_for_client.dart' as api_mod;
import '../common/get_it.dart';
import '../common/model.dart';
import '../nucleus_one.dart';

// Originally generated by nucleus_one_utilities.
class DocumentSubscriptionForClient extends Entity with NucleusOneAppDependent {
  DocumentSubscriptionForClient._({
    NucleusOneApp? app,
    required this.id,
    required this.subscribed,
    required this.notify,
    required this.createdOn,
    required this.organizationID,
    required this.projectID,
    required this.projectName,
    required this.projectAccessType,
    required this.documentID,
    required this.documentCreatedOn,
    required this.documentName,
    required this.documentPageCount,
    required this.documentFileSize,
    required this.documentPreviewMetadata,
    required this.documentIsSigned,
    required this.documentThumbnailUrl,
  }) {
    this.app = app ?? getIt.get<NucleusOneApp>();
  }

  factory DocumentSubscriptionForClient.fromApiModel(
    api_mod.DocumentSubscriptionForClient apiModel, {
    NucleusOneApp? app,
  }) {
    return DocumentSubscriptionForClient._(
      app: app,
      id: apiModel.id!,
      subscribed: apiModel.subscribed!,
      notify: apiModel.notify!,
      createdOn: apiModel.createdOn!,
      organizationID: apiModel.organizationID!,
      projectID: apiModel.projectID!,
      projectName: apiModel.projectName!,
      projectAccessType: apiModel.projectAccessType!,
      documentID: apiModel.documentID!,
      documentCreatedOn: apiModel.documentCreatedOn!,
      documentName: apiModel.documentName!,
      documentPageCount: apiModel.documentPageCount!,
      documentFileSize: apiModel.documentFileSize!,
      documentPreviewMetadata:
          (apiModel.documentPreviewMetadata ?? []).map((x) => Map<String, String>.from(x)).toList(),
      documentIsSigned: apiModel.documentIsSigned!,
      documentThumbnailUrl: apiModel.documentThumbnailUrl!,
    );
  }

  String id;

  bool subscribed;

  bool notify;

  String createdOn;

  String organizationID;

  String projectID;

  String projectName;

  String projectAccessType;

  String documentID;

  String documentCreatedOn;

  String documentName;

  int documentPageCount;

  int documentFileSize;

  List<Map<String, String>> documentPreviewMetadata;

  bool documentIsSigned;

  String documentThumbnailUrl;

  @override
  api_mod.DocumentSubscriptionForClient toApiModel() {
    return api_mod.DocumentSubscriptionForClient()
      ..id = id
      ..subscribed = subscribed
      ..notify = notify
      ..createdOn = createdOn
      ..organizationID = organizationID
      ..projectID = projectID
      ..projectName = projectName
      ..projectAccessType = projectAccessType
      ..documentID = documentID
      ..documentCreatedOn = documentCreatedOn
      ..documentName = documentName
      ..documentPageCount = documentPageCount
      ..documentFileSize = documentFileSize
      ..documentPreviewMetadata = documentPreviewMetadata.toList()
      ..documentIsSigned = documentIsSigned
      ..documentThumbnailUrl = documentThumbnailUrl;
  }
}

class DocumentSubscriptionForClientCollection extends EntityCollection<
    DocumentSubscriptionForClient, api_mod.DocumentSubscriptionForClientCollection> {
  DocumentSubscriptionForClientCollection({
    NucleusOneApp? app,
    List<DocumentSubscriptionForClient>? items,
  }) : super(app: app, items: items);

  factory DocumentSubscriptionForClientCollection.fromApiModel(
    api_mod.DocumentSubscriptionForClientCollection apiModel, {
    NucleusOneApp? app,
  }) {
    return DocumentSubscriptionForClientCollection(
        items: apiModel.documentSubscriptions
            ?.map((x) => DocumentSubscriptionForClient.fromApiModel(x))
            .toList());
  }

  @override
  api_mod.DocumentSubscriptionForClientCollection toApiModel() {
    return api_mod.DocumentSubscriptionForClientCollection()
      ..documentSubscriptions = items.map((x) => x.toApiModel()).toList();
  }
}
