import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';
import 'field.dart';

part 'form_template_field.g.dart';

// Originally generated by nucleus_one_utilities.
mixin FormTemplateFieldMixin {
  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'FormTemplateID')
  String? formTemplateID;

  @JsonKey(name: 'FormTemplateName')
  String? formTemplateName;

  @JsonKey(name: 'FormTemplateNameLower')
  String? formTemplateNameLower;

  @JsonKey(name: 'TenantID')
  String? tenantID;

  @JsonKey(name: 'UniqueID')
  String? uniqueID;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'Type')
  String? type;

  @JsonKey(name: 'FieldID')
  String? fieldID;

  @JsonKey(name: 'Field')
  Field? field;

  @JsonKey(name: 'PageIndex')
  int? pageIndex;

  @JsonKey(name: 'X')
  double? x;

  @JsonKey(name: 'Y')
  double? y;

  @JsonKey(name: 'Width')
  double? width;

  @JsonKey(name: 'FontSize')
  int? fontSize;

  @JsonKey(name: 'UseColumnLayout')
  bool? useColumnLayout;

  @JsonKey(name: 'AssetBucketName')
  String? assetBucketName;

  @JsonKey(name: 'AssetObjectName')
  String? assetObjectName;

  @JsonKey(name: 'AssetContentType')
  String? assetContentType;

  @JsonKey(name: 'AssetSignedUrl')
  String? assetSignedUrl;

  @JsonKey(name: 'DefaultValue')
  String? defaultValue;

  @JsonKey(name: 'DefaultValues')
  String? defaultValues;

  @JsonKey(name: 'PossibleValues')
  List<String>? possibleValues;

  @JsonKey(name: 'Value')
  String? value;

  @JsonKey(name: 'Values')
  String? values;
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class FormTemplateField extends Entity with FormTemplateFieldMixin {
  FormTemplateField();

  /// A necessary factory constructor for creating a new FormTemplateField instance
  /// from a map. Pass the map to the generated [_$FormTemplateFieldFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FormTemplateField.
  factory FormTemplateField.fromJson(Map<String, dynamic> json) =>
      _$FormTemplateFieldFromJson(json);

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$FormTemplateFieldToJson].
  @override
  Map<String, dynamic> toJson() => _$FormTemplateFieldToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
class FormTemplateFieldCollection extends EntityCollection<FormTemplateField> {
  FormTemplateFieldCollection() : super();

  factory FormTemplateFieldCollection.fromJson(List<Map<String, dynamic>> json) {
    return EntityCollection.fromJsonArray(
      json: json,
      instance: FormTemplateFieldCollection(),
      entityFromJsonCallback: (x) => FormTemplateField.fromJson(x),
    );
  }
}
