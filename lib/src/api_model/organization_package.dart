import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';

import 'organization.dart';
import 'query_result.dart';

part 'organization_package.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class OrganizationPackageCollection implements IQueryResultEntityCollection {
  OrganizationPackageCollection();

  /// A necessary factory constructor for creating a new OrganizationPackageCollection instance
  /// from a map. Pass the map to the generated [_$OrganizationPackageCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, OrganizationPackageCollection.
  factory OrganizationPackageCollection.fromJson(Map<String, dynamic> json) =>
      _$OrganizationPackageCollectionFromJson(json);

  @JsonKey(name: 'OrganizationPackagesForCurrentUser')
  List<OrganizationPackage>? organizationPackages;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$OrganizationPackageCollectionToJson].
  Map<String, dynamic> toJson() => _$OrganizationPackageCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class OrganizationPackage extends Entity {
  OrganizationPackage();

  /// A necessary factory constructor for creating a new OrganizationPackage instance
  /// from a map. Pass the map to the generated [_$OrganizationPackageFromJson()] constructor.
  /// The constructor is named after the source class, in this case, OrganizationPackage.
  factory OrganizationPackage.fromJson(Map<String, dynamic> json) =>
      _$OrganizationPackageFromJson(json);

  @JsonKey(name: 'Organization')
  Organization? organization;

  @JsonKey(name: 'UserID')
  String? userID;

  @JsonKey(name: 'IsMember')
  bool? isMember;

  @JsonKey(name: 'IsExpiringSoon')
  bool? isExpiringSoon;

  @JsonKey(name: 'Expiration')
  String? expiration;

  @JsonKey(name: 'FreeUsers')
  int? freeUsers;

  @JsonKey(name: 'IsExpired')
  bool? isExpired;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$OrganizationPackageToJson].
  @override
  Map<String, dynamic> toJson() => _$OrganizationPackageToJson(this);
  // coverage:ignore-end
}
