import 'package:json_annotation/json_annotation.dart';

part 'work_task_event.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class WorkTaskEventCollection {
  WorkTaskEventCollection();

  /// A necessary factory constructor for creating a new WorkTaskEventCollection instance
  /// from a map. Pass the map to the generated [_$WorkTaskEventCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, WorkTaskEventCollection.
  factory WorkTaskEventCollection.fromJson(Map<String, dynamic> json) =>
      _$WorkTaskEventCollectionFromJson(json);

  @JsonKey(name: 'WorkTaskEvents')
  List<WorkTaskEvent>? workTaskEvents;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$WorkTaskEventCollectionToJson].
  Map<String, dynamic> toJson() => _$WorkTaskEventCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class WorkTaskEvent {
  WorkTaskEvent();

  /// A necessary factory constructor for creating a new WorkTaskEvent instance
  /// from a map. Pass the map to the generated [_$WorkTaskEventFromJson()] constructor.
  /// The constructor is named after the source class, in this case, WorkTaskEvent.
  factory WorkTaskEvent.fromJson(Map<String, dynamic> json) => _$WorkTaskEventFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'WorkTaskID')
  String? workTaskID;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'CreatedByUserID')
  String? createdByUserID;

  @JsonKey(name: 'CreatedByUserName')
  String? createdByUserName;

  @JsonKey(name: 'CreatedByUserEmail')
  String? createdByUserEmail;

  @JsonKey(name: 'ModifiedOn')
  String? modifiedOn;

  @JsonKey(name: 'Type')
  String? type;

  @JsonKey(name: 'WorkTaskRevision')
  int? workTaskRevision;

  @JsonKey(name: 'DetailJson')
  String? detailJson;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$WorkTaskEventToJson].
  Map<String, dynamic> toJson() => _$WorkTaskEventToJson(this);
  // coverage:ignore-end
}
