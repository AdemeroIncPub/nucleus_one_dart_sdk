import 'package:json_annotation/json_annotation.dart';

part 'subscription_invoice.g.dart';

// Originally generated by nucleus_one_utilities.
class SubscriptionInvoiceCollection {
  SubscriptionInvoiceCollection() : items = [];

  /// This JSON structure has an array at its root, which is not currently implicitly supported by json_serializable.
  /// https://github.com/google/json_serializable.dart/issues/648
  factory SubscriptionInvoiceCollection.fromJson(List<dynamic> json) {
    return SubscriptionInvoiceCollection()
      ..items = json.map((m) => SubscriptionInvoice.fromJson(m)).toList();
  }

  List<SubscriptionInvoice> items;
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class SubscriptionInvoice {
  SubscriptionInvoice();

  /// A necessary factory constructor for creating a new SubscriptionInvoice instance
  /// from a map. Pass the map to the generated [_$SubscriptionInvoiceFromJson()] constructor.
  /// The constructor is named after the source class, in this case, SubscriptionInvoice.
  factory SubscriptionInvoice.fromJson(Map<String, dynamic> json) =>
      _$SubscriptionInvoiceFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'AmountDue')
  double? amountDue;

  @JsonKey(name: 'IsUpcoming')
  bool? isUpcoming;

  @JsonKey(name: 'Status')
  String? status;

  @JsonKey(name: 'PDFUrl')
  String? pdfUrl;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$SubscriptionInvoiceToJson].
  Map<String, dynamic> toJson() => _$SubscriptionInvoiceToJson(this);
  // coverage:ignore-end
}
