import 'package:json_annotation/json_annotation.dart';

import '../common/api_model.dart';
import 'form_submission_field.dart';

part 'form_submission_package.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class FormSubmissionPackage extends Entity {
  FormSubmissionPackage();

  /// A necessary factory constructor for creating a new FormSubmissionPackage instance
  /// from a map. Pass the map to the generated [_$FormSubmissionPackageFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FormSubmissionPackage.
  factory FormSubmissionPackage.fromJson(Map<String, dynamic> json) =>
      _$FormSubmissionPackageFromJson(json);

  @JsonKey(name: 'TenantID')
  String? tenantID;

  @JsonKey(name: 'FormTemplateID')
  String? formTemplateID;

  @JsonKey(name: 'FormSubmissionFields')
  List<FormSubmissionField>? formSubmissionFields;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$FormSubmissionPackageToJson].
  @override
  Map<String, dynamic> toJson() => _$FormSubmissionPackageToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
class FormSubmissionPackageCollection extends EntityCollection<FormSubmissionPackage> {
  FormSubmissionPackageCollection() : super();

  factory FormSubmissionPackageCollection.fromJson(List<Map<String, dynamic>> json) {
    return EntityCollection.fromJsonArray(
      json: json,
      instance: FormSubmissionPackageCollection(),
      entityFromJsonCallback: (x) => FormSubmissionPackage.fromJson(x),
    );
  }
}
