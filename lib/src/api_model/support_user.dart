import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';
import 'query_result.dart';

part 'support_user.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class SupportUserCollection implements IQueryResultEntityCollection {
  SupportUserCollection();

  /// A necessary factory constructor for creating a new FieldCollection instance
  /// from a map. Pass the map to the generated [_$SupportUserCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FieldCollection.
  factory SupportUserCollection.fromJson(Map<String, dynamic> json) =>
      _$SupportUserCollectionFromJson(json);

  @JsonKey(name: 'Users')
  List<SupportUser>? supportUsers;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$SupportUserCollectionToJson].
  Map<String, dynamic> toJson() => _$SupportUserCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class SupportUser extends Entity {
  SupportUser();

  /// A necessary factory constructor for creating a new SupportUser instance
  /// from a map. Pass the map to the generated [_$SupportUserFromJson()] constructor.
  /// The constructor is named after the source class, in this case, SupportUser.
  factory SupportUser.fromJson(Map<String, dynamic> json) => _$SupportUserFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'LastSignIn')
  String? lastSignIn;

  @JsonKey(name: 'LastActivity')
  String? lastActivity;

  @JsonKey(name: 'Email')
  String? email;

  @JsonKey(name: 'Provider')
  String? provider;

  @JsonKey(name: 'Name')
  String? name;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$SupportUserToJson].
  @override
  Map<String, dynamic> toJson() => _$SupportUserToJson(this);
  // coverage:ignore-end
}
