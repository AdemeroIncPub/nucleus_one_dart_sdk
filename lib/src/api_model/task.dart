import 'package:json_annotation/json_annotation.dart';

import '../common/api_model.dart';
import '../api_model/document.dart';
import 'query_result.dart';

part 'task.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class TaskCollection implements IQueryResultEntityCollection {
  TaskCollection();

  /// A necessary factory constructor for creating a new TaskCollection instance
  /// from a map. Pass the map to the generated [_$TaskCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, TaskCollection.
  factory TaskCollection.fromJson(Map<String, dynamic> json) => _$TaskCollectionFromJson(json);

  @JsonKey(name: 'Tasks')
  List<Task>? tasks;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$TaskCollectionToJson].
  Map<String, dynamic> toJson() => _$TaskCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class Task extends Entity {
  Task();

  /// A necessary factory constructor for creating a new Task instance
  /// from a map. Pass the map to the generated [_$TaskFromJson()] constructor.
  /// The constructor is named after the source class, in this case, Task.
  factory Task.fromJson(Map<String, dynamic> json) => _$TaskFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'OrganizationID')
  String? organizationID;

  @JsonKey(name: 'ProjectID')
  String? projectID;

  @JsonKey(name: 'ProjectName')
  String? projectName;

  @JsonKey(name: 'ProjectAccessType')
  String? projectAccessType;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'ModifiedOn')
  String? modifiedOn;

  @JsonKey(name: 'CreatedByUserID')
  String? createdByUserID;

  @JsonKey(name: 'CreatedByUserEmail')
  String? createdByUserEmail;

  @JsonKey(name: 'CreatedByUserName')
  String? createdByUserName;

  @JsonKey(name: 'CompletedOn')
  String? completedOn;

  @JsonKey(name: 'CompletedByUserID')
  String? completedByUserID;

  @JsonKey(name: 'CompletedByUserEmail')
  String? completedByUserEmail;

  @JsonKey(name: 'CompletedByUserName')
  String? completedByUserName;

  @JsonKey(name: 'ModifiedByUserID')
  String? modifiedByUserID;

  @JsonKey(name: 'ModifiedByUserEmail')
  String? modifiedByUserEmail;

  @JsonKey(name: 'ModifiedByUserName')
  String? modifiedByUserName;

  @JsonKey(name: 'Revision')
  int? revision;

  @JsonKey(name: 'Result')
  String? result;

  @JsonKey(name: 'Name')
  String? name;

  @JsonKey(name: 'NameLower')
  String? nameLower;

  @JsonKey(name: 'Description')
  String? description;

  @JsonKey(name: 'DescriptionHtml')
  String? descriptionHtml;

  @JsonKey(name: 'DescriptionRichTextJson')
  String? descriptionRichTextJson;

  @JsonKey(name: 'AssignmentUserEmail')
  String? assignmentUserEmail;

  @JsonKey(name: 'AssignmentUserName')
  String? assignmentUserName;

  @JsonKey(name: 'AssignmentUserNameLower')
  String? assignmentUserNameLower;

  @JsonKey(name: 'DueOn')
  String? dueOn;

  @JsonKey(name: 'DueOnModifiedOn')
  String? dueOnModifiedOn;

  @JsonKey(name: 'PrimaryDocument')
  Document? primaryDocument;

  @JsonKey(name: 'OtherDocuments')
  List<Document>? otherDocuments;

  @JsonKey(name: 'ParentTaskID')
  String? parentTaskID;

  @JsonKey(name: 'ProcessID')
  String? processID;

  @JsonKey(name: 'ProcessName')
  String? processName;

  @JsonKey(name: 'ProcessNameLower')
  String? processNameLower;

  @JsonKey(name: 'ProcessElementID')
  String? processElementID;

  @JsonKey(name: 'ProcessElementName')
  String? processElementName;

  @JsonKey(name: 'ProcessElementNameLower')
  String? processElementNameLower;

  @JsonKey(name: 'Reminder_7_Day')
  String? reminder_7_Day;

  @JsonKey(name: 'Reminder_3_Day')
  String? reminder_3_Day;

  @JsonKey(name: 'Reminder_1_Day')
  String? reminder_1_Day;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$TaskToJson].
  @override
  Map<String, dynamic> toJson() => _$TaskToJson(this);
  // coverage:ignore-end
}
