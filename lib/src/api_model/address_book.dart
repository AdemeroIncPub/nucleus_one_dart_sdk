import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';

part 'address_book.g.dart';

// Originally generated by nucleus_one_utilities.
class AddressBook extends EntityCollection<AddressBookItem> {
  AddressBook() : super();

  factory AddressBook.fromJson(List<dynamic> json) {
    return EntityCollection.fromJson(
      json: json,
      instance: AddressBook(),
      entityFromJsonCallback: (x) => AddressBookItem.fromJson(x),
    );
  }
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class AddressBookItem extends Entity {
  AddressBookItem();

  /// A necessary factory constructor for creating a new AddressBookItem instance
  /// from a map. Pass the map to the generated [_$AddressBookItemFromJson()] constructor.
  /// The constructor is named after the source class, in this case, AddressBookItem.
  factory AddressBookItem.fromJson(Map<String, dynamic> json) => _$AddressBookItemFromJson(json);

  @JsonKey(name: 'EmailLower')
  String? emailLower;

  @JsonKey(name: 'Name')
  String? name;

  @JsonKey(name: 'TenantMemberID')
  String? tenantMemberID;

  @JsonKey(name: 'RoleID')
  String? roleID;

  @JsonKey(name: 'FieldID')
  String? fieldID;

  @JsonKey(name: 'FormTemplateID')
  String? formTemplateID;

  @JsonKey(name: 'FormTemplateName')
  String? formTemplateName;

  @JsonKey(name: 'FormTemplateFieldID')
  String? formTemplateFieldID;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$AddressBookItemToJson].
  @override
  Map<String, dynamic> toJson() => _$AddressBookItemToJson(this);
  // coverage:ignore-end
}
