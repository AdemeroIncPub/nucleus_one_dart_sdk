import 'package:json_annotation/json_annotation.dart';

import 'project.dart';

part 'project_packages.g.dart';

// Originally generated by nucleus_one_utilities.
class ProjectPackageCollection {
  ProjectPackageCollection() : items = [];

  /// This JSON structure has an array at its root, which is not currently implicitly supported by json_serializable.
  /// https://github.com/google/json_serializable.dart/issues/648
  factory ProjectPackageCollection.fromJson(List<dynamic> json) {
    return ProjectPackageCollection()..items = json.map((m) => ProjectPackage.fromJson(m)).toList();
  }

  List<ProjectPackage> items;
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class ProjectPackage {
  ProjectPackage();

  /// A necessary factory constructor for creating a new ProjectPackage instance
  /// from a map. Pass the map to the generated [_$ProjectPackageFromJson()] constructor.
  /// The constructor is named after the source class, in this case, ProjectPackage.
  factory ProjectPackage.fromJson(Map<String, dynamic> json) => _$ProjectPackageFromJson(json);

  @JsonKey(name: 'Tenant')
  Project? tenant;

  @JsonKey(name: 'TenantMember')
  ProjectMember? tenantMember;

  @JsonKey(name: 'IsAdmin')
  bool? isAdmin;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$ProjectPackageToJson].
  Map<String, dynamic> toJson() => _$ProjectPackageToJson(this);
  // coverage:ignore-end
}
