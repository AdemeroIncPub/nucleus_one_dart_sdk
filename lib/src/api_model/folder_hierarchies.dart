import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';
import 'query_result.dart';

part 'folder_hierarchies.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class FolderHierarchyCollection implements IQueryResultEntityCollection {
  FolderHierarchyCollection();

  /// A necessary factory constructor for creating a new FolderHierarchyCollection instance
  /// from a map. Pass the map to the generated [_$FolderHierarchyCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FolderHierarchyCollection.
  factory FolderHierarchyCollection.fromJson(Map<String, dynamic> json) =>
      _$FolderHierarchyCollectionFromJson(json);

  @JsonKey(name: 'FolderHierarchies')
  List<FolderHierarchy>? folderHierarchies;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$FolderHierarchyCollectionToJson].
  Map<String, dynamic> toJson() => _$FolderHierarchyCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class FolderHierarchy extends Entity {
  FolderHierarchy();

  /// A necessary factory constructor for creating a new FolderHierarchy instance
  /// from a map. Pass the map to the generated [_$FolderHierarchyFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FolderHierarchy.
  factory FolderHierarchy.fromJson(Map<String, dynamic> json) => _$FolderHierarchyFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'Name')
  String? name;

  @JsonKey(name: 'NameLower')
  String? nameLower;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$FolderHierarchyToJson].
  @override
  Map<String, dynamic> toJson() => _$FolderHierarchyToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class FolderHierarchyItem extends Entity {
  FolderHierarchyItem();

  /// A necessary factory constructor for creating a new FolderHierarchyItem instance
  /// from a map. Pass the map to the generated [_$FolderHierarchyItemFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FolderHierarchyItem.
  factory FolderHierarchyItem.fromJson(Map<String, dynamic> json) =>
      _$FolderHierarchyItemFromJson(json);

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'FolderHierarchyID')
  String? folderHierarchyID;

  @JsonKey(name: 'FolderHierarchyName')
  String? folderHierarchyName;

  @JsonKey(name: 'Rank')
  int? rank;

  @JsonKey(name: 'Type')
  String? type;

  @JsonKey(name: 'FieldID')
  String? fieldID;

  @JsonKey(name: 'FieldName')
  String? fieldName;

  @JsonKey(name: 'FieldType')
  String? fieldType;

  @JsonKey(name: 'FieldValueType')
  String? fieldValueType;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$FolderHierarchyItemToJson].
  @override
  Map<String, dynamic> toJson() => _$FolderHierarchyItemToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
class FolderHierarchyItemCollection extends EntityCollection<FolderHierarchyItem> {
  FolderHierarchyItemCollection() : super();

  factory FolderHierarchyItemCollection.fromJson(List<Map<String, dynamic>> json) {
    return EntityCollection.fromJsonArray(
      json: json,
      instance: FolderHierarchyItemCollection(),
      entityFromJsonCallback: (x) => FolderHierarchyItem.fromJson(x),
    );
  }
}
