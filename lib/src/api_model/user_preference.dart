import 'dart:convert';

import 'package:json_annotation/json_annotation.dart';

import '../common/api_model.dart';
part 'user_preference.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class UserPreference extends Entity {
  UserPreference();

  /// A necessary factory constructor for creating a new UserPreference instance
  /// from a map. Pass the map to the generated [_$UserPreferenceFromJson()] constructor.
  /// The constructor is named after the source class, in this case, UserPreference.
  factory UserPreference.fromJson(Map<String, dynamic> json) {
    return _$UserPreferenceFromJson(json)..mapValue = JsonEncoder().convert(json['MapValue']);
  }

  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'UserID')
  String? userID;

  @JsonKey(name: 'UserName')
  String? userName;

  @JsonKey(name: 'UserEmail')
  String? userEmail;

  @JsonKey(name: 'StringValue')
  String? stringValue;

  @JsonKey(name: 'BoolValue')
  bool? boolValue;

  @JsonKey(name: 'IntValue')
  int? intValue;

  @JsonKey(name: 'FloatValue')
  double? floatValue;

  @JsonKey(ignore: true)
  String? mapValue;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$UserPreferenceToJson].
  @override
  Map<String, dynamic> toJson() => _$UserPreferenceToJson(this);
  // coverage:ignore-end
}
