import 'package:json_annotation/json_annotation.dart';
import '../common/api_model.dart';
import 'query_result.dart';

part 'organization_for_client.g.dart';

// Originally generated by nucleus_one_utilities.
mixin OrganizationForClientMixin {
  @JsonKey(name: 'ID')
  String? id;

  @JsonKey(name: 'CreatedOn')
  String? createdOn;

  @JsonKey(name: 'Name')
  String? name;

  @JsonKey(name: 'CreatingUserID')
  String? creatingUserID;

  @JsonKey(name: 'CreatingUserName')
  String? creatingUserName;

  @JsonKey(name: 'CreatingUserEmail')
  String? creatingUserEmail;

  @JsonKey(name: 'CrmAccountId')
  String? crmAccountId;

  @JsonKey(name: 'SubscriptionRequired')
  bool? subscriptionRequired;

  @JsonKey(name: 'SubscriptionFreeUsers')
  int? subscriptionFreeUsers;

  @JsonKey(name: 'SubscriptionExpiration')
  String? subscriptionExpiration;

  @JsonKey(name: 'SearchIndexID')
  String? searchIndexID;

  @JsonKey(name: 'BucketName')
  String? bucketName;

  @JsonKey(name: 'Disabled')
  bool? disabled;

  @JsonKey(name: 'IsMarkedForPurge')
  bool? isMarkedForPurge;

  @JsonKey(name: 'PurgeDate')
  String? purgeDate;

  @JsonKey(name: 'UniqueNonReadOnlyOrganizationMembers')
  int? uniqueNonReadOnlyOrganizationMembers;

  @JsonKey(name: 'UniqueReadOnlyOrganizationMembers')
  int? uniqueReadOnlyOrganizationMembers;

  @JsonKey(name: 'UniqueFreeOrganizationMembers')
  int? uniqueFreeOrganizationMembers;

  @JsonKey(name: 'UniqueBillableOrganizationMembers')
  int? uniqueBillableOrganizationMembers;
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class OrganizationForClientCollection implements IQueryResultEntityCollection {
  OrganizationForClientCollection();

  /// A necessary factory constructor for creating a new FieldCollection instance
  /// from a map. Pass the map to the generated [_$OrganizationForClientCollectionFromJson()] constructor.
  /// The constructor is named after the source class, in this case, FieldCollection.
  factory OrganizationForClientCollection.fromJson(Map<String, dynamic> json) =>
      _$OrganizationForClientCollectionFromJson(json);

  @JsonKey(name: 'Organizations')
  List<OrganizationForClient>? organizations;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$OrganizationForClientCollectionToJson].
  Map<String, dynamic> toJson() => _$OrganizationForClientCollectionToJson(this);
  // coverage:ignore-end
}

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class OrganizationForClient extends Entity with OrganizationForClientMixin {
  OrganizationForClient();

  /// A necessary factory constructor for creating a new OrganizationForClient instance
  /// from a map. Pass the map to the generated [_$OrganizationForClientFromJson()] constructor.
  /// The constructor is named after the source class, in this case, OrganizationForClient.
  factory OrganizationForClient.fromJson(Map<String, dynamic> json) =>
      _$OrganizationForClientFromJson(json);

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$OrganizationForClientToJson].
  @override
  Map<String, dynamic> toJson() => _$OrganizationForClientToJson(this);
  // coverage:ignore-end
}
