import 'package:json_annotation/json_annotation.dart';

import '../common/api_model.dart';
import 'approval.dart';
import 'document.dart';
import 'document_package_field.dart';
import 'document_subscription_for_client.dart';
import 'project.dart';

part 'document_package.g.dart';

// Originally generated by nucleus_one_utilities.
// Serializable members must be explicitly marked with [JsonKey].
@JsonSerializable(ignoreUnannotated: true, includeIfNull: false)
class DocumentPackage extends Entity {
  DocumentPackage();

  /// A necessary factory constructor for creating a new DocumentPackage instance
  /// from a map. Pass the map to the generated [_$DocumentPackageFromJson()] constructor.
  /// The constructor is named after the source class, in this case, DocumentPackage.
  factory DocumentPackage.fromJson(Map<String, dynamic> json) => _$DocumentPackageFromJson(json);

  @JsonKey(name: 'ProjectMember')
  ProjectMember? projectMember;

  @JsonKey(name: 'ProjectAccessType')
  String? projectAccessType;

  @JsonKey(name: 'Document')
  Document? document;

  @JsonKey(name: 'DocumentSubscription')
  DocumentSubscriptionForClient? documentSubscription;

  @JsonKey(name: 'Approval')
  Approval? approval;

  @JsonKey(name: 'Fields')
  List<DocumentPackageField>? fields;

  // coverage:ignore-start
  /// [toJson] is the convention for a class to declare support for serialization
  /// to JSON. The implementation simply calls the private, generated
  /// helper method [_$DocumentPackageToJson].
  @override
  Map<String, dynamic> toJson() => _$DocumentPackageToJson(this);
  // coverage:ignore-end
}
